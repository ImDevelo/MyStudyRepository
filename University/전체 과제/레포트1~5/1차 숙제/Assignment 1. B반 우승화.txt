1. 컴파일러, 어셈블러, 링커, 로더의 차이점을 설명하라.

 컴퓨터가 C언어를 받아들이기 위해서는 C언어->어셈블러 언어->기계어의 과정을 거쳐 변역된다.
이때 컴파일러는 C언어를 어셈블러언어로 변역할 때 사용되는 소프트웨어, 어셈블러는 어셈블러
언어를 기계어로 변역하는 소프트웨어라는 특징을 가지고 있다. 
링커는 함수 사이를 연결하기 위해 사용되는 소프트웨어로서, 컴파일러와 어셈블러를 통해 변역된
정보를 연결하여 오브젝트 코드에 삽입하고 이를 실행파일로 만들때 사용되는 소프트웨어이다.
로더는 실행파일을 메모리로 올리기 위해 사용되는데, 하드 디스크에 저장된 실행파일을 메인 메모
리의 적절한 위치에 배치하는 역활을 하는 시스템 소프트웨어이다. 
이처럼 이들은 C언어가 컴퓨터로 실행되기까지 필요한 소프트웨어라는 공통점을 가지고 있지만
어떤 단계에서 사용되어지는지, 어떤 언어나 코드를 변역하는지에 차이점을 띄고있다.



2. 소스파일, 오브젝트 파일, 실행파일의 차이점을 설명하라.

 파일을 실행시킬때 소스 파일 -> 오브젝트 파일 -> 실행 파일의 순서로 이루어진다. 
소스파일은 .c 확장자로 끝나며 소스코드를 저장하고 있다.
오브젝트파일은 .obj확장자로 끝나며 전처리기를 통해 처리된 소스코드인 오브젝트 코드로 이루어져있다.
이러한 오브젝트 파일이 여러개 있을 경우 링커가 이들을 서로 연결하여 실행 파일로 만든다. 이렇게 만들어진
실행파일은 .exe확장자로 끝난다.
이와 같이 소스파일과 오트젝트파일, 실행파일은 모두 단계가 다르고 내포 되어있는 코드도 다르며,
이들 모두 .뒤에 오는 확정자가 다르다는 차이점을 가지고있다.




3. 같은 크기의 공이 아홉 개 있다. 그 중 여덟 개는 무게가 같고 하나만 무겁다. 천칭(Balance)을 써서 
무게를 재되 단 두 번만 재어 더 무거운 공을 찾아내는 알고리즘을 의사 코드로 써 보라.

1) 편의상 각 공에다  1~9까지 번호를 붙인다.
2) 공을 3/3/3 로 3묶음으로 나눈다. (ex: 1,2,3/4,5,6/7,8,9)
3) 같은 무게의 주머니 A, B, C안에 각각 공 묶음을 넣은다.(ex: A-1,2,3  /  B-4,5,6  /  C-7,8,9)
4) 천칭에 A, B주머니를 올린다. 만약 천칭이 평행이라면 5)를 실행하고 기울어 진다면 6)을 실행한다.
5) 천칭이 평행이라면 A, B주머니에 들은 1~6공은 전부 같으므로 C주머니의 공 중에서 다른 무게의 공이있다.
   그러므로 C주머니의 공 3개를 꺼내어 7)을 실행한다.
6) 천칭이 기울여진다면 A, B주머니 둘 중 더 무거운 주머니안에 무게가 다른 공이 있다. 
    그러므로 기울여진 주머니(더 무거운 주머니)안에 들은 공 3개를 꺼내어 7)을 실행한다.
7) 꺼낸 공 3개를 중 2개를 선택하여 각각 천칭 양쪽에 올린다 만약 천칭이 평행이라면 8)를 실행하고 기울어 진다면 9)을 실행한다.
8)  천칭이 평행이라면 천칭에 올린 두 공은 똑같은 공이므로 천칭에 올리지 않은 공이 바로 다른 8개와 무게가 다른 공이다. 
     천칭에 올리지 않은 공을 손에 쥐고 10)을 실행한다.
9)  천칭이 평행이 아니라면 두 공 중 무거운공이 바로 다른 8개와 무게가 다른 공이다.
     기울여진 천징 위의 공(더 무거운 공)을 손에 쥐고 10)을 실행한다.
10) 손에 쥐고 있는 공이 바로 우리가 찾던 무거운 공이다!

